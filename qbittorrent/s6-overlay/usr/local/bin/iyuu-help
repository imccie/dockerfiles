#!/bin/bash

## IyuuAutoReseed辅助脚本，实现以下功能：
## 1. 检查下载清单（就是qbittorrent筛选“下载”的清单），检测该清单中处于暂停状态、并且下载完成率为0%（辅种的种子在校验前也是0%）的种子，将这些种子请求重新校验。已经请求过校验并且完成率大于0%的种子不会再次校验。
## 2. 检查暂停清单（就是qbittorrent筛选“暂停”的清单），检测该清单中100%下载完成/100%校验通过的种子，将这些种子恢复做种。校验未通过不达100%完成率的种子不会启动，仍然保持暂停状态。

. /usr/local/bin/share

## 检测出需要校验的种子并发起校验
downloading_info=$($cmd_curl ${api_url_base}/torrents/info?filter=downloading)
downloading_hashes=( $(echo $downloading_info | jq -r .[].hash) )
downloading_states=( $(echo $downloading_info | jq -r .[].state) )
recheck_hashes=""
for ((i=0; i<${#downloading_hashes[*]}; i++)); do
    piece_states=$($cmd_curl $api_url_base/torrents/pieceStates?hash=${downloading_hashes[i]})
    if [[ ${downloading_states[i]} == pausedDL && ${piece_states} != *2* ]]; then
        recheck_hashes="${recheck_hashes}|${downloading_hashes[i]}"
    fi
done
$cmd_curl_post ${api_url_base}/torrents/recheck -d "hashes=${recheck_hashes/|/}"

## 检测校验完成的种子，并对100%完成率的种子恢复做种
paused_info=$($cmd_curl ${api_url_base}/torrents/info?filter=paused)
paused_hashes=( $(echo $paused_info | jq -r .[].hash) )
paused_states=( $(echo $paused_info | jq -r .[].state) )
resume_hashes=""
for ((i=0; i<${#paused_hashes[*]}; i++)); do
    piece_states=$($cmd_curl $api_url_base/torrents/pieceStates?hash=${paused_hashes[i]})
    if [[ ${paused_states[i]} == pausedUP && ${piece_states} != *0* && ${piece_states} != *1* ]]; then
        resume_hashes="${resume_hashes}|${paused_hashes[i]}"
    fi
done
$cmd_curl_post $api_url_base/torrents/resume -d "hashes=${resume_hashes/|/}"
