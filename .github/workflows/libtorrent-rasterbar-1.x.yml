name: 构建libtorrent-rasterbar-1.x镜像
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: 构建libtorrent-rasterbar-1.x镜像
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      CONTEXT: libtorrent-rasterbar
      DOCKERFILE_NAME: Dockerfile.GithubAction
      DOCKERHUB_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/libtorrent-rasterbar
      BUILDX_ARCH: linux/amd64
    steps:
      - 
        name: 检出
        uses: actions/checkout@master

      - 
        name: 设置QEMU
        uses: docker/setup-qemu-action@v1

      - 
        name: 设置Buildx
        uses: docker/setup-buildx-action@v1

      - 
        name: 登陆DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - 
        name: 设置缓存
        uses: actions/cache@v2
        id: buildx-cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx

      - 
        name: 构建并推送镜像
        run: |
          LIBTORRENT_VERSION=$(curl -s https://api.github.com/repos/arvidn/libtorrent/tags | jq -r .[]."name" | grep -m1 -E "v1\.([0-9]+\.?){2,3}$" | sed "s/v//")
          echo "LIBTORRENT_VERSION=${LIBTORRENT_VERSION}"
          echo "DOCKERFILE_NAME=${DOCKERFILE_NAME}"
          cd ${CONTEXT}
          docker buildx build \
            --progress "plain" \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --platform "${BUILDX_ARCH}" \
            --build-arg "LIBTORRENT_VERSION=${LIBTORRENT_VERSION}" \
            --tag "${DOCKERHUB_REPOSITORY}:${LIBTORRENT_VERSION}" \
            --tag "${DOCKERHUB_REPOSITORY}:1" \
            --file ${DOCKERFILE_NAME} \
            .
